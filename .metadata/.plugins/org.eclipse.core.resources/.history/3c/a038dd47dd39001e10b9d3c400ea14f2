#include "BIT_MATH.h"
#include "STD_TYPES.h"

#include "MRCC_int.h"
#include "MGPIO_int.h"
#include "STK_int.h"

#include "LCD.h"
#include "keypad_int.h"
#include "LEDMATRIX_int.h"
#include "Servo_Motor.h"

#include "SYS_INIT.h"
#include "MUART_int.h"
#include "MNVIC_int.h"
#include "MEXTI_int.h"



#define MEXTI0     6
#define MEXTI1     7
void func1(void);
void func2(void);


  u8 user1 = 0 ;
  u8 user2 = 0 ;
  u8 user3 = 0 ;




void SYS_INIT(void)

{

	 MRCC_InitSysClk ();
	 //INITIALIZE RCC

			MRCC_vidEnable_Peripheral (RCC_AHB1,AHB1ENR_GPIOAEN) ;  //INITIALIZE RCC PORTA
			MRCC_vidEnable_Peripheral (RCC_AHB1,AHB1ENR_GPIOBEN) ;  //INITIALIZE RCC PORTB
			MRCC_vidEnable_Peripheral (RCC_APB2,APB2ENR_USART1EN) ; //INITIALIZE RCC UART1
			MGPIO_SetPinMode(PORTB, PIN0, INPUT);
			MGPIO_SetInputPin(PORTB, PIN0, INPUT_FLOAT);
			MSTK_voidInit();    //INITIALIZE SYSTICK
			Servo1_Entry_Gate_Init();
			Servo1_Entry_Gate(0);
			LCD_Init_4BIT();   //INITIALIZE LCD 4 BITS DATA
					keypad_init();     //  //INITIALIZE KEYPAD
					MUART_RUNNABLE();
					MRCC_vidEnable_Peripheral(RCC_APB2, APB2ENR_SYSCFGEN);


					EXTI_INIT();

						ADMIN_STATE();

}

void ADMIN_STATE (void)
{
	 LCD_SetCursor(0,5);
     LCD_WriteString("WELCOME");


	 LCD_SetCursor(1,0);
	 LCD_WriteString("TO SMART PARKING ");

	 MSTK_voidDelayMsec(50000);

	 LCD_Clear();
	 MSTK_voidDelayMsec(200);
	 USER1();
	 USER2();
	 USER3();





}

void USER1(void)
{
	while (1)
	{
		u8 k;
		     LCD_SetCursor (0,0);
			 LCD_WriteString("FIRST CUSTOMER ");
			 LCD_SetCursor(1,0);
			 LCD_WriteString("ENTER ID : ");
			 LCD_SetCursor(1,11);
			 k= keypad_Get_Pressed_Key();
			 if (k!= NO_KEY)
			 {
				 user1 = k;
					 LCD_WriteChar(k);

					 MSTK_voidDelayMsec(2000);
					 LCD_Clear();
					 MSTK_voidDelayMsec(1000);
					 break;
			 }


	}
}
void USER2(void){
	u8 k;
	while (1){
			     LCD_SetCursor (0,0);
				 LCD_WriteString("SECOND CUSTOMER ");
				 LCD_SetCursor(1,0);
				 LCD_WriteString("ENTER ID : ");
				 LCD_SetCursor(1,11);
				 k= keypad_Get_Pressed_Key();
				 if (k!= NO_KEY)
				 {
					 user2 = k;
						 LCD_WriteChar(k);
						 MSTK_voidDelayMsec(2000);
						 LCD_Clear();
						 MSTK_voidDelayMsec(1000);
						 break;
				 }
	}
}

void USER3(void)
{
	u8 k;
		while (1){
				     LCD_SetCursor (0,0);
					 LCD_WriteString("THIRD CUSTOMER ");
					 LCD_SetCursor(1,0);
					 LCD_WriteString("ENTER ID : ");
					 LCD_SetCursor(1,11);
					 k= keypad_Get_Pressed_Key();
					 if (k!= NO_KEY)
					 {
						 user3 = k;
							 LCD_WriteChar(k);
							 MSTK_voidDelayMsec(2000);
							 LCD_Clear();
							 MSTK_voidDelayMsec(1000);
							 LCD_WriteString("LOADING");
							 MSTK_voidDelayMsec(500);
							 LCD_SetCursor(0,8);
							 LCD_WriteChar('.');
							 MSTK_voidDelayMsec(500);
							 LCD_SetCursor(0,9);
							 LCD_WriteChar('.');
							 MSTK_voidDelayMsec(500);
							 LCD_SetCursor(0,10);
							 LCD_WriteChar('.');
							 MSTK_voidDelayMsec(2000);
							 LCD_SetCursor(1,0);
							 LCD_WriteString("SUCCESSFUL");
							 MSTK_voidDelayMsec(2000);
							 LCD_Clear();
							 MSTK_voidDelayMsec(200);
							 LCD_SetCursor(0,5);
							      LCD_WriteString("WELCOME");



							 break;
					 }
		}
}

void MUART_RUNNABLE (void)
{
	MGPIO_SetPinMode(PORTA,PIN9,ALT_FUNC);
    MGPIO_SetPinMode(PORTA,PIN10,ALT_FUNC);
    MGPIO_SetPinAlterFunc(PORTA, PIN9, AF7_USART1_USART2);
    MGPIO_SetPinAlterFunc(PORTA, PIN10, AF7_USART1_USART2);
    MUSART_voidInit();
    MUART_voidEnable();

}



void EXTI_INIT(void)
{
	    MNVIC_BoolSetPriorityMode(SIXTEENGRPS);
	    MNVIC_u8SetPriorities(MEXTI0, 5, 0);
	    MNVIC_u8SetPriorities(MEXTI1, 0, 0);
	    MNVIC_BoolEnablePerINT(MEXTI0);
	    MNVIC_BoolEnablePerINT(MEXTI1);

			MGPIO_SetPinMode(PORTA,  PIN0, INPUT);
			MGPIO_SetInputPin(PORTA, PIN0, INPUT_PULLUP);

			MGPIO_SetPinMode(PORTA,  PIN1, INPUT);
			MGPIO_SetInputPin(PORTA, PIN1, INPUT_PULLUP);


			   MEXTI_voidSetEXTIConfig(EXTI_LINE0,PORTA);
			   MEXTI_voidSetTrigger(EXTI_LINE0,EXTI_RISING);
			    MEXTI_voidSetEXTIConfig(EXTI_LINE0,PORTA);
			    MEXTI_voidSetTrigger(EXTI_LINE1,EXTI_FALLING);
			    MEXTI0_voidCallBack(func1);
				MEXTI1_voidCallBack(func2);
				MEXTI_voidSoftwareTrigger(EXTI_LINE0);
				MEXTI_voidSoftwareTrigger(EXTI_LINE1);



}





